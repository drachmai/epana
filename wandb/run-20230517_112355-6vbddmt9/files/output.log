Some weights of the model checkpoint at roberta-base were not used when initializing RobertaModel: ['lm_head.dense.bias', 'lm_head.layer_norm.bias', 'lm_head.decoder.weight', 'lm_head.bias', 'lm_head.layer_norm.weight', 'lm_head.dense.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Epoch 1:   0%|                                                                                                                                                         | 0/1402 [00:39<?, ?it/s]
Traceback (most recent call last):
  File "/Users/jamesmarquardt/drachmai/epana/epana_modeling/trainers/local.py", line 43, in <module>
    model, tokenizer = train(num_epochs, batch_size, learning_rate, step_size, gamma, embedder_name, dataset, accumulation_steps, strategy, mode, focal_alpha_positive, focal_alpha_negative, focal_gamma, train_sample_size=None, val_sample_size=None, test_sample_size=None)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jamesmarquardt/drachmai/epana/epana_modeling/train.py", line 181, in train
    loss = criterion(logits, target)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jamesmarquardt/.local/share/virtualenvs/epana-5bA-42am-python/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jamesmarquardt/drachmai/epana/epana_modeling/model.py", line 18, in forward
    F_loss = self.alpha * (1-pt)**self.gamma * BCE_loss
             ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
TypeError: only integer tensors of a single element can be converted to an index